{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/codecademy/react-practice/my-app/src/practice-example.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// regex to match numbers between 1 and 10 digits long\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validPhoneNumber = /^\\d{1,10}$/;\nexport default function PhoneNumber() {\n  _s();\n  // declare current state and state sette\n  const [phone, setPhone] = useState(\"\");\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const newPhone = target.value;\n    const isValid = validPhoneNumber.test(newPhone);\n    if (isValid) {\n      // update state\n      setPhone(newPhone);\n    }\n    // just ignore the event, when new value is invalid\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phone\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"phone-input\",\n      children: \"Phone: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: phone,\n      onChange: handleChange,\n      id: \"phone-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(PhoneNumber, \"Rh3uEiqewCp0E8HPHmYE4vPaDg8=\");\n_c = PhoneNumber;\nvar _c;\n$RefreshReg$(_c, \"PhoneNumber\");","map":{"version":3,"names":["React","useState","validPhoneNumber","PhoneNumber","phone","setPhone","handleChange","target","newPhone","value","isValid","test"],"sources":["/Users/admin/Documents/codecademy/react-practice/my-app/src/practice-example.jsx"],"sourcesContent":["import React, {useState} from 'react';\n\n// regex to match numbers between 1 and 10 digits long\nconst validPhoneNumber = /^\\d{1,10}$/;\n\nexport default function PhoneNumber() {\n  // declare current state and state sette\n  const [phone, setPhone] = useState(\"\"); \n\n  const handleChange = ({ target })=> {\n    const newPhone = target.value;\n    const isValid = validPhoneNumber.test(newPhone);\n    if (isValid) {\n        // update state\n        setPhone(newPhone);\n    }\n    // just ignore the event, when new value is invalid\n  };\n\n  return (\n    <div className='phone'>\n      <label for='phone-input'>Phone: </label>\n      <input value={phone} onChange={handleChange} id='phone-input'/>\n    </div>\n  );\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAErC;AAAA;AACA,MAAMC,gBAAgB,GAAG,YAAY;AAErC,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMK,YAAY,GAAG,QAAe;IAAA,IAAd;MAAEC;IAAO,CAAC;IAC9B,MAAMC,QAAQ,GAAGD,MAAM,CAACE,KAAK;IAC7B,MAAMC,OAAO,GAAGR,gBAAgB,CAACS,IAAI,CAACH,QAAQ,CAAC;IAC/C,IAAIE,OAAO,EAAE;MACT;MACAL,QAAQ,CAACG,QAAQ,CAAC;IACtB;IACA;EACF,CAAC;;EAED,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAO,GAAG,EAAC,aAAa;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAQ,eACxC;MAAO,KAAK,EAAEJ,KAAM;MAAC,QAAQ,EAAEE,YAAa;MAAC,EAAE,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAEV;AAAC,GApBuBH,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}