{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/codecademy/react-practice/my-app/src/practice-example.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizNavBar(_ref) {\n  _s();\n  let {\n    questions\n  } = _ref;\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  // define event handlers\n  const goBack = () => {\n    setQuestionIndex(prevQuestionIndex => prevQuestionIndex - 1);\n  };\n  const goNext = () => {\n    setQuestionIndex(prevQuestionIndex => prevQuestionIndex + 1);\n  };\n\n  // determine if on the first question or not \n\n  const onLastQuestion = questionIndex === questions.length - 1;\n  const onFirstQuestion = questionIndex === 0;\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Question #\", questionIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        disabled: onFirstQuestion,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goNext,\n        disabled: onLastQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizNavBar, \"gpMkEH9ZHH4VXYtW4YT7VhgHY7c=\");\n_c = QuizNavBar;\nvar _c;\n$RefreshReg$(_c, \"QuizNavBar\");","map":{"version":3,"names":["React","useState","QuizNavBar","questions","questionIndex","setQuestionIndex","goBack","prevQuestionIndex","goNext","onLastQuestion","length","onFirstQuestion"],"sources":["/Users/admin/Documents/codecademy/react-practice/my-app/src/practice-example.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function QuizNavBar({ questions }) {\n    \n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  // define event handlers\n  const goBack = () => {\n    setQuestionIndex(prevQuestionIndex => prevQuestionIndex - 1)\n  } \n  const goNext = () => {\n        setQuestionIndex(prevQuestionIndex => prevQuestionIndex + 1)\n  }\n\n  // determine if on the first question or not \n\n  const onLastQuestion = questionIndex === questions.length - 1;\n  const onFirstQuestion = questionIndex === 0;\n\n  return (\n    <nav>\n      <span>Question #{questionIndex + 1}</span>\n      <div>\n        <button onClick={goBack} disabled = {onFirstQuestion}>\n          Go Back\n        </button>\n        <button onClick={goNext} disabled={onLastQuestion}>\n          Next Question\n        </button>\n      </div>\n    </nav>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,eAAe,SAASC,UAAU,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAE9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;;EAErD;EACA,MAAMK,MAAM,GAAG,MAAM;IACnBD,gBAAgB,CAACE,iBAAiB,IAAIA,iBAAiB,GAAG,CAAC,CAAC;EAC9D,CAAC;EACD,MAAMC,MAAM,GAAG,MAAM;IACfH,gBAAgB,CAACE,iBAAiB,IAAIA,iBAAiB,GAAG,CAAC,CAAC;EAClE,CAAC;;EAED;;EAEA,MAAME,cAAc,GAAGL,aAAa,KAAKD,SAAS,CAACO,MAAM,GAAG,CAAC;EAC7D,MAAMC,eAAe,GAAGP,aAAa,KAAK,CAAC;EAE3C,oBACE;IAAA,wBACE;MAAA,WAAM,YAAU,EAACA,aAAa,GAAG,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC1C;MAAA,wBACE;QAAQ,OAAO,EAAEE,MAAO;QAAC,QAAQ,EAAIK,eAAgB;QAAA,UAAC;MAEtD;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAQ,OAAO,EAAEH,MAAO;QAAC,QAAQ,EAAEC,cAAe;QAAA,UAAC;MAEnD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA9BuBP,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}